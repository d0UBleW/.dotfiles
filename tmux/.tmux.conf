bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

set -g prefix C-t
unbind C-b
bind-key C-t send-prefix

set -g base-index 1

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on

# set-option -g default-terminal screen-256color
# set-option -ga terminal-overrides ',screen-256color:Tc'
set-option -g default-terminal xterm-256color
set-option -ga terminal-overrides ",xterm-256color:Tc"
# set-option -g default-terminal tmux-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

# bind-key space next-window
# bind-key bspace previous-window
bind-key space next-layout
bind-key enter popup -E -d "~" -w 66% -h 66%

bind-key -n M-left swap-window -t -1 \; previous-window
bind-key -n M-right swap-window -t +1 \; next-window

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

bind-key S choose-tree -Zs
bind-key W choose-tree -Zw "swap-window -t '%%'"
bind-key P choose-tree -Zw "swap-pane -t '%%'"
bind-key C-p choose-tree -Zw "move-pane -t '%%'"
bind-key -n C-M-w command-prompt -p "Swap current window to? (e.g. 3; 4; session_name:5)  " "swap-window -t '%%'"
bind-key -n C-M-p command-prompt -p "Swap current pane to? (e.g. 2.0; session_name:4.0)  " "swap-pane -t '%%'"
bind-key -n M-p command-prompt -p "Move current pane to? (e.g. 2.1; session_name:4.0)  " "move-pane -t '%%'"

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

bind-key u attach-session -t . -c "#{pane_current_path}"\; display-message "working directory changed: #{pane_current_path}"

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta
set-window-option -g window-status-format ' #[fg=default]#I:#W#F '

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -sel clip' # "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xclip -in -sel clip' # "reattach-to-user-namespace pbcopy"

# Status Bar
set-option -g status-interval 1

# set-option -g status-style bg=black
# set-option -g status-style fg=white
# set-option -g status-style bg=white
set-option -g status-style fg=default
set -g status-left '#[fg=green]#S #[default]'
set -g status-right '%a, %l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

set -g escape-time 50

set-environment -g PATH "/usr/local/bin:/usr/bin"

# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'

# run '~/.tmux/plugins/tpm/tpm'
# run-shell '~/.tmux/plugins/tmux-resurrect/resurrect.tmux'

# new-session
